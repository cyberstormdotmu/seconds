package enersis.envisor.entity;

// Generated Apr 28, 2015 10:59:09 AM by Hibernate Tools 4.3.1

import java.io.Serializable;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * MeasurementType generated by hbm2java
 */
@Entity
@Table(name = "MeasurementType")
public class MeasurementType implements Serializable {

	private byte id;
	private String type;
	private byte status;
	private Set<MeasurementTypeProject> measurementTypeProjects = new HashSet<MeasurementTypeProject>(
			0);
	private Set<MeasurementTypeUtilityType> measurementTypeUtilityTypes = new HashSet<MeasurementTypeUtilityType>(
			0);

	public MeasurementType() {
	}

	public MeasurementType(byte id, String type, byte status) {
		this.id = id;
		this.type = type;
		this.status = status;
	}

	public MeasurementType(byte id, String type, byte status,
			Set<MeasurementTypeProject> measurementTypeProjects,
			Set<MeasurementTypeUtilityType> measurementTypeUtilityTypes) {
		this.id = id;
		this.type = type;
		this.status = status;
		this.measurementTypeProjects = measurementTypeProjects;
		this.measurementTypeUtilityTypes = measurementTypeUtilityTypes;
	}

	@Id
	@GeneratedValue(strategy = GenerationType.IDENTITY)
	@Column(name = "id", unique = true, nullable = false)
	public byte getId() {
		return this.id;
	}

	public void setId(byte id) {
		this.id = id;
	}

	@Column(name = "type", nullable = false, length = 15)
	public String getType() {
		return this.type;
	}

	public void setType(String type) {
		this.type = type;
	}

	@Column(name = "status", nullable = false)
	public byte getStatus() {
		return this.status;
	}

	public void setStatus(byte status) {
		this.status = status;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "measurementType")
	public Set<MeasurementTypeProject> getMeasurementTypeProjects() {
		return this.measurementTypeProjects;
	}

	public void setMeasurementTypeProjects(
			Set<MeasurementTypeProject> measurementTypeProjects) {
		this.measurementTypeProjects = measurementTypeProjects;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "measurementType")
	public Set<MeasurementTypeUtilityType> getMeasurementTypeUtilityTypes() {
		return this.measurementTypeUtilityTypes;
	}

	public void setMeasurementTypeUtilityTypes(
			Set<MeasurementTypeUtilityType> measurementTypeUtilityTypes) {
		this.measurementTypeUtilityTypes = measurementTypeUtilityTypes;
	}

}
