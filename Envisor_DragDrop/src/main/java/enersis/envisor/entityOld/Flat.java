package enersis.envisor.entityOld;

// Generated Apr 17, 2015 7:56:54 PM by Hibernate Tools 4.3.1

import java.io.Serializable;
import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Flat generated by hbm2java
 */
@Entity
@Table(name = "Flat")
public class Flat implements java.io.Serializable {

	private int id;
	private Building building;
	private Byte no;
	private Byte floor;
	private Short area;
	private Byte status;
	private Date transactionTime;
	private Set<HeatMeter> caloriMeters = new HashSet<HeatMeter>(0);
	private Set<Installation> installations = new HashSet<Installation>(0);
	private Set<Room> rooms = new HashSet<Room>(0);
	private Set<WaterMeter> waterMeters = new HashSet<WaterMeter>(0);

	public Flat() {
	}

	public Flat(int id, Byte no) {
		this.id = id;
		this.no = no;
	}

	public Flat(int id, Building building, Byte no, Byte floor,
			Short area, Byte status, Date transactionTime,
			Set<HeatMeter> caloriMeters, Set<Installation> installations,
			Set<Room> rooms, Set<WaterMeter> waterMeters) {
		this.id = id;
		this.building = building;
		this.no = no;
		this.floor = floor;
		this.area = area;
		this.status = status;
		this.transactionTime = transactionTime;
		this.caloriMeters = caloriMeters;
		this.installations = installations;
		this.rooms = rooms;
		this.waterMeters = waterMeters;
	}

	@Id
	@GeneratedValue(strategy=GenerationType.IDENTITY)
	@Column(name = "id", unique = true, nullable = false)
	public int getId() {
		return this.id;
	}

	public void setId(int id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "buildingId")
	public Building getBuilding() {
		return this.building;
	}

	public void setBuilding(Building building) {
		this.building = building;
	}

	@Column(name = "no", nullable = false)
	public Byte getNo() {
		return this.no;
	}

	public void setNo(Byte no) {
		this.no = no;
	}

	@Column(name = "floor")
	public Byte getFloor() {
		return this.floor;
	}

	public void setFloor(Byte floor) {
		this.floor = floor;
	}

	@Column(name = "area")
	public Short getArea() {
		return this.area;
	}

	public void setArea(Short area) {
		this.area = area;
	}

	@Column(name = "status")
	public Byte getStatus() {
		return this.status;
	}

	public void setStatus(Byte status) {
		this.status = status;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "transactionTime", length = 23)
	public Date getTransactionTime() {
		return this.transactionTime;
	}

	public void setTransactionTime(Date transactionTime) {
		this.transactionTime = transactionTime;
	}

	@OneToMany(fetch = FetchType.EAGER, mappedBy = "flat")
	public Set<HeatMeter> getCaloriMeters() {
		return this.caloriMeters;
	}

	public void setCaloriMeters(Set<HeatMeter> caloriMeters) {
		this.caloriMeters = caloriMeters;
	}

	@OneToMany(fetch = FetchType.EAGER, mappedBy = "flat")
	public Set<Installation> getInstallations() {
		return this.installations;
	}

	public void setInstallations(Set<Installation> installations) {
		this.installations = installations;
	}

	@OneToMany(fetch = FetchType.EAGER, mappedBy = "flat")
	public Set<Room> getRooms() {
		return this.rooms;
	}

	public void setRooms(Set<Room> rooms) {
		this.rooms = rooms;
	}

	@OneToMany(fetch = FetchType.EAGER, mappedBy = "flat")
	public Set<WaterMeter> getWaterMeters() {
		return this.waterMeters;
	}

	public void setWaterMeters(Set<WaterMeter> waterMeters) {
		this.waterMeters = waterMeters;
	}

}
